# Game messages
game.prompt.name=What's your name?
game.welcome.message=Welcome to the Palmon Arena, {0}!
game.prompt.opponent.name=How's your opponent called?
game.opponent.taunt={0} will destroy you!
game.prompt.play.again=Do you want to play another round?

# Fight messages
fight.prompt.team.size=How many Palmons do you want to have in your team?
fight.prompt.level.range=Do you want to set a level range for your Palmons?
fight.prompt.lowest.level=Lowest possible level:
fight.prompt.highest.level=Highest possible level:
fight.prompt.select.attribute=By which attribute do you want to select your Palmons?
fight.team.consists.of=Your team consists of the following Palmons:
fight.prompt.opponent.team.size=Do you want to set the number of Palmons for {0}?
fight.prompt.opponent.team.size.input=How many Palmons does your opponent have in his team?
fight.opponent.ready={0} is ready to crush you. Let the fight begin!
fight.prompt.battle.status=Do you want to see the current battle status?
fight.turn.message=\nIts {0}s turn with {1}.
fight.you.have.left=\n\nYou have {0} Palmons left.
fight.opponent.has.left={0} has {1} Palmons left.
fight.currently.fighting=\n Currently fighting Palmons (yours is the first):
fight.congratulations=\nCongratulations, {0}! You have defeated {1} with these Palmons:
fight.loss.message=\nAs expected, {0} has destroyed you. But even in loss, you have the power to rise again.

# Team Assembler messages
team.assembler.select=Now select your favorite Palmons by their {0}!
team.assembler.select.type=Which Palmon type do you want?
team.assembler.select.by.type.prompt=Which {0} Palmon do you want in your team? Enter its ID:
team.assembler.select.by.id.prompt=Which Palmon do you want in your team? Enter its ID:
team.assembler.no.palmon.exists=No Palmon exists for this ID. Enter a different one:
team.assembler.added={0} has been added to your team.

# Palmon messages
palmon.select.move=Enter the ID of the move you want to use:
palmon.select.move.available=Select one of the available moves:
palmon.no.moves.available=No moves available. {0} can not attack.
palmon.select.attack=Select {0}s move to attack {1}!
palmon.attack.missed=Attack has missed the enemy.
palmon.attack.defended={0} defended himself against {1}. No damage dealt.
palmon.attack.damage={0} damage points dealt with attack {1}.
palmon.hp.remaining={0} has {1} hit points remaining.
palmon.defeated={0} has been defeated.

# TableOutput columns
tableoutput.column.id=Id
tableoutput.column.name=Name
tableoutput.column.height=Height
tableoutput.column.weight=Weight
tableoutput.column.types=Types
tableoutput.column.hp=HP
tableoutput.column.attack=Attack
tableoutput.column.defense=Defense
tableoutput.column.speed=Speed
tableoutput.column.damage=Damage
tableoutput.column.accuracy=Accuracy in %
tableoutput.column.type=Type

# UserInput prompts
userinput.prompt.text.empty=Text can't be empty:
userinput.prompt.number=Enter a valid number:
userinput.prompt.number.range.lower=Enter a number greater than or equal to {0}:
userinput.prompt.number.range.upper=Enter a number smaller than or equal to {0}:
userinput.prompt.choice=Your choice:
userinput.prompt.choice.invalid=Select one of the provided options:

# Enum values
enum.assembler.type=Type
enum.assembler.id=ID
enum.assembler.random=Random
enum.confirmation.yes=Yes
enum.confirmation.no=No